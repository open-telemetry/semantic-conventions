# Use this changelog template to create an entry for release notes.
#
# If your change doesn't affect end users you should instead start
# your pull request title with [chore] or use the "Skip Changelog" label.

# One of 'breaking', 'deprecation', 'new_component', 'enhancement', 'bug_fix'
change_type: breaking

# The name of the area of concern in the attributes-registry, (e.g. http, cloud, db)
component: k8s

# A brief description of the change. Surround your text with quotes ("") if it needs to start with a backtick (`).
note: "Fix plural-named updowncounter k8s metrics; replace with singular + .count names."

# Mandatory: One or more tracking issues related to the change. You can use the PR number here if no issue exists.
# The values here must be integers.
issues: [2301]

# (Optional) One or more lines of additional information to render under the primary note.
# These lines will be padded with 2 spaces and then inserted directly into the document.
# Use pipe (|) for multiline entries.
subtext: |
  Renamed metrics:
  - k8s.node.allocatable.pods -> k8s.node.allocatable.pod.count
  - k8s.daemonset.current_scheduled_nodes -> k8s.daemonset.current_scheduled_node.count
  - k8s.daemonset.desired_scheduled_nodes -> k8s.daemonset.desired_scheduled_node.count
  - k8s.daemonset.misscheduled_nodes -> k8s.daemonset.misscheduled_node.count
  - k8s.daemonset.ready_nodes -> k8s.daemonset.ready_node.count
  - k8s.job.active_pods -> k8s.job.active_pod.count
  - k8s.job.failed_pods -> k8s.job.failed_pod.count
  - k8s.job.successful_pods -> k8s.job.successful_pod.count
  - k8s.job.desired_successful_pods -> k8s.job.desired_successful_pod.count
  - k8s.job.max_parallel_pods -> k8s.job.max_parallel_pod.count
  - k8s.cronjob.active_jobs -> k8s.cronjob.active_job.count
  - k8s.deployment.desired_pods -> k8s.deployment.desired_pod.count
  - k8s.deployment.available_pods -> k8s.deployment.available_pod.count
  - k8s.replicaset.desired_pods -> k8s.replicaset.desired_pod.count
  - k8s.replicaset.available_pods -> k8s.replicaset.available_pod.count
  - k8s.replicationcontroller.desired_pods -> k8s.replicationcontroller.desired_pod.count
  - k8s.replicationcontroller.available_pods -> k8s.replicationcontroller.available_pod.count
  - k8s.statefulset.desired_pods -> k8s.statefulset.desired_pod.count
  - k8s.statefulset.ready_pods -> k8s.statefulset.ready_pod.count
  - k8s.statefulset.current_pods -> k8s.statefulset.current_pod.count
  - k8s.statefulset.updated_pods -> k8s.statefulset.updated_pod.count
  - k8s.hpa.desired_pods -> k8s.hpa.desired_pod.count
  - k8s.hpa.current_pods -> k8s.hpa.current_pod.count
  - k8s.hpa.max_pods -> k8s.hpa.max_pod.count
  - k8s.hpa.min_pods -> k8s.hpa.min_pod.count
