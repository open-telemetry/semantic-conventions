{#- This template is rendered per top-level registry namespace. -#}
{#- It consists of two variables: -#}
{#- - id: The top-level namespace id. -#}
{#- - groups: A sequence of all attribute groups under this namespace. -#}
{#-           This includes deprecated groups. -#}
{% import 'stability.j2' as stability %}
{% import 'notes.j2' as notes %}
{%- set my_file_name = ctx.id | lower | kebab_case ~ ".md" -%}
{{- template.set_file_name(my_file_name) -}}

<!--- Hugo front matter used to generate the website version of this page:
--->

<!-- NOTE: THIS FILE IS AUTOGENERATED. DO NOT EDIT BY HAND. -->
<!-- see templates/registry/markdown/attribute_namespace.md.j2 -->

# {{ ctx.id | title_case | acronym }}

{% if ctx.groups | length > 1 %}{% for group in ctx.groups | sort(attribute="id") %}
{%- set group_name = group.id | split_id | list | reject("eq", "registry") | join(" ") -%}
- [{{ group_name | title_case }}](#{{group_name | kebab_case }}-attributes)
{% endfor %}{% endif %}
{% for group in ctx.groups | sort(attribute="id") %}
## {{ group.id | split_id | list | reject("eq", "registry") | join(" ") | title_case }} Attributes

{{ group.brief }}

| Attribute  | Type | Description  | Examples  | Stability |
|---|---|---|---|---|
{%- for attribute in group.attributes | sort(attribute="name") %}
| {% include "attribute_name.j2" %} | {% include "attribute_type.j2" | trim %} | {{ attribute.brief | trim }}{{ notes.add(attribute.note) }} | {% include "examples.j2" | trim %} | {{ stability.badge(attribute.stability, attribute.deprecated) | trim }} |
{%- endfor %}

{{ notes.render() }}
{% for enum in group.attributes | sort(attribute="name") %}
{%- if enum.type is mapping -%}{#- We should use a filter for enums vs. this if. -#}
`{{enum.name}}` has the following list of well-known values. If one of them applies, then the respective value MUST be used; otherwise, a custom value MAY be used.

| Value  | Description | Stability |
|---|---|---|
{% for espec in enum.type.members %}| `{{espec.value}}` | {{espec.brief | trim}} | {{ stability.badge(espec.stability, espec.deprecated) }} |
{% endfor %}
{% endif %}
{%- endfor -%}
{%- endfor -%}
