<!-- NOTE: THIS FILE IS AUTOGENERATED. DO NOT EDIT BY HAND. -->
<!-- see templates/registry/markdown/entity_namespace.md.j2 -->
<!-- markdownlint-capture -->
<!-- markdownlint-disable -->
{%- import 'stability.j2' as stability %}
{%- import 'requirement.j2' as requirement %}
{%- import 'attribute_table.j2' as at %}
{%- import 'body_field_table.j2' as body_table %}
{%- import 'event_macros.j2' as event %}

# {{ ctx.id | title_case | acronym }}
{% for e in ctx.groups | sort(attribute='name') %}
## {{ e.name | title_case | acronym }}

**Status:** {{ stability.badge(e.stability, e.deprecated) }}

**Event Name:** `{{ e.name }}`

{# **Namespace:** [`{{ ctx.namespace }}`](README.md) #}

**Summary:** {{ e.brief | trim }}

{%if e.note %}
**Description:** {{ e.note | trim }}
{% endif %}

{%- if e.attributes | length > 0 %}
### Attributes:
{{ at.generate(e.attributes, "", "/docs/registry/attributes", e.lineage.attributes) | trim }}
{%- endif %}

{%- if e.body %}
### Body fields:

**Status:** {{ stability.badge(e.body.stability, e.body.deprecated) }}

**requirement:** {{ requirement.render({"level": e.body.requirement_level, "name": e.name}, notes) }}

:warning: Body fields will be moved to complex attributes once the
semantic convention tooling supports complex attributes
(see [#1870](https://github.com/open-telemetry/semantic-conventions/issues/1870)).

{%- if e.body.fields != undefined and e.body.fields | length > 0 %}
{{ body_table.generate(e.body.fields) }}
{%- endif %}
{%- endif %}
{% endfor %}
<!-- markdownlint-restore -->

