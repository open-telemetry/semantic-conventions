groups:
  - id: registry.otel
    type: attribute_group
    display_name: OTel Attributes
    brief: Attributes reserved for OpenTelemetry
    attributes:
      - id: otel.status_code
        type:
          members:
            - id: ok
              value: OK
              brief: 'The operation has been validated by an Application developer or Operator to have completed successfully.'
              stability: stable
            - id: error
              value: ERROR
              brief: 'The operation contains an error.'
              stability: stable
        brief: Name of the code, either "OK" or "ERROR". MUST NOT be set if the status code is UNSET.
        stability: stable
      - id: otel.status_description
        type: string
        brief: "Description of the Status if it has a value, otherwise not set."
        examples: ['resource not found']
        stability: stable
      - id: otel.span.is_sampled
        type: boolean
        brief: "The sampled trace flag of the span"
        stability: development
  - id: registry.otel.scope
    type: attribute_group
    display_name: OTel Scope Attributes
    brief: Attributes used by non-OTLP exporters to represent OpenTelemetry Scope's concepts.
    attributes:
      - id: otel.scope.name
        type: string
        brief: The name of the instrumentation scope - (`InstrumentationScope.Name` in OTLP).
        examples: ['io.opentelemetry.contrib.mongodb']
        stability: stable
      - id: otel.scope.version
        type: string
        brief: The version of the instrumentation scope - (`InstrumentationScope.Version` in OTLP).
        examples: ['1.0.0']
        stability: stable
  - id: registry.otel.sdk
    type: attribute_group
    display_name: OTel SDK Telemetry Attributes
    brief: Attributes used for OpenTelemetry SDK self-monitoring
    attributes:
      - id: otel.sdk.component.name
        type: string
        stability: development
        brief: >
          A name uniquely identifying the instance of the OpenTelemetry SDK component within its containing SDK instance.
        note: |
          The attribute value MUST follow a `<type-name>/<instance-counter>` pattern, e.g. `batching_span_processor/0`.

          For components corresponding to SDK specification concepts, the `type-name` MUST have the following values:

          * `batching_span_processor` for the SDK Batching Span Processor
          * `simple_span_processor` for the SDK Simple Span Processor
          * `otlp_grpc_exporter` for the OTLP exporter over gRPC with protobuf serialization
          * `otlp_http_exporter` for the OTLP exporter over HTTP with protobuf serialization
          * `otlp_http_json_exporter` for the OTLP exporter over HTTP with JSON serialization

          Other components SHOULD use the language and implementation dependant type name of the component for `type-name`, e.g. the class name in Java.

          The value of `instance-counter` MUST be automatically assigned by the component and uniqueness within the enclosing SDK instance MUST be guaranteed.
          Because this attribute is used in metrics, the component implementation MUST ensure a low cardinality. E.g. a UUID MUST NOT be use for <instance-counter>.
          Instead, `<instance-counter>` MAY be implemented by using a monotonically increasing counter (starting with `0`), which is incremented every time an
          instance of the given component type is started.

          For example, the first Batching Span Processor will have `batching_span_processor/0` as `otel.sdk.component.name`, the second one `batching_span_processor/1` and so on.
          These values will therefore be reused in the case of an application restart.
        examples: ["batch-span-0", "custom-name"]
