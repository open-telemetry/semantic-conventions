groups:
  - id: metric.otel.sdk.span.live.count
    type: metric
    metric_name: otel.sdk.span.live.count
    stability: development
    brief: "The number of created spans for which the end operation has not been called yet"
    instrument: updowncounter
    unit: "{span}"
    note: |
      For spans with `recording=true` implementations MUST record both `metric.otel.sdk.span.live.count` and `otel.sdk.span.ended.count`otel.sdk.component.name`.
      For spans with `recording=false` implementations MUST either record both `metric.otel.sdk.span.live.count` and `otel.sdk.span.ended.count`otel.sdk.component.name` or none.
    attributes:
      - ref: otel.span.sampling_result

  - id: metric.otel.sdk.span.ended.count
    type: metric
    metric_name: otel.sdk.span.ended.count
    stability: development
    brief: "The number of created spans for which the end operation was called"
    instrument: counter
    unit: "{span}"
    note: |
      For spans with `recording=true` implementations MUST record both `metric.otel.sdk.span.live.count` and `otel.sdk.span.ended.count`otel.sdk.component.name`.
      For spans with `recording=false` implementations MUST either record both `metric.otel.sdk.span.live.count` and `otel.sdk.span.ended.count`otel.sdk.component.name` or none.
    attributes:
      - ref: otel.span.sampling_result

  - id: metric.otel.sdk.span.processor.queue.size
    type: metric
    metric_name: otel.sdk.span.processor.queue.size
    stability: development
    brief: "The number of spans in the queue of a given instance of an SDK span processor"
    note: |
      Only applies to span processors which use a queue, e.g. the SDK Batching Span Processor.
    instrument: updowncounter
    unit: "{span}"
    attributes:
      - ref: otel.sdk.component.type
      - ref: otel.sdk.component.name

  - id: metric.otel.sdk.span.processor.queue.capacity
    type: metric
    metric_name: otel.sdk.span.processor.queue.capacity
    stability: development
    brief: "The maximum number of spans the queue of a given instance of an SDK span processor can hold"
    note: |
      Only applies to span processors which use a queue, e.g. the SDK Batching Span Processor.
    instrument: updowncounter
    unit: "{span}"
    attributes:
      - ref: otel.sdk.component.type
      - ref: otel.sdk.component.name

  - id: metric.otel.sdk.span.processor.spans.processed
    type: metric
    metric_name: otel.sdk.span.processor.spans.processed
    stability: development
    brief: "The number of spans for which the processing has finished, either successful or failed"
    note: |
      For successful processing, `error.type` must be empty. For failed processing, `error.type` must contain the failure cause.
      For the SDK Simple and Batching Span Processor a span is considered to be processed already when it has been submitted to the exporter, not when the corresponding export call has finished.
    instrument: counter
    unit: "{span}"
    attributes:
      - ref: otel.sdk.component.type
      - ref: otel.sdk.component.name
      - ref: error.type
        brief: >
          A low-cardinality description of the failure reason. SDK Batching Span Processors MUST use `queue_full` for spans dropped due to a full queue.
        examples: ["queue_full"]

  - id: metric.otel.sdk.exporter.span.inflight.count
    type: metric
    metric_name: otel.sdk.exporter.span.inflight.count
    stability: development
    brief: "The number of spans which were passed to the exporter, but that have not been exported yet (neither successful, nor failed)"
    note: |
      For successful exports, `error.type` must be empty. For failed exports, `error.type` must contain the failure cause.
    instrument: updowncounter
    unit: "{span}"
    attributes:
      - ref: otel.sdk.component.type
      - ref: otel.sdk.component.name
      - ref: server.address
        note: recommended when applicable
      - ref: server.port
        note: recommended when applicable

  - id: metric.otel.sdk.exporter.span.exported.count
    type: metric
    metric_name: otel.sdk.exporter.span.exported.count
    stability: development
    brief: "The number of spans for which the export has finished, either successful or failed"
    note: |
      For successful exports, `error.type` must be empty. For failed exports, `error.type` must contain the failure cause.
      For exporters with partial success semantics (e.g. OTLP with `rejected_spans`), rejected spans must count as failed and only non-rejected spans count as success.
      If no rejection reason is available, `rejected` SHOULD be used as value for `error.type`.
    instrument: counter
    unit: "{span}"
    attributes:
      - ref: otel.sdk.component.type
      - ref: otel.sdk.component.name
      - ref: server.address
        note: recommended when applicable
      - ref: server.port
        note: recommended when applicable
      - ref: error.type
        examples: ["rejected"]
