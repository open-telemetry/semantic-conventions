groups:
  - id: dotnet.http.request.wait_for_connection
    type: span
    stability: development
    span_kind: internal
    brief: 'The span is emitted by .NET runtime and describes the time it takes for HTTP request to obtain a connection to run on.'
    note: |
      The span is reported only if there are no connections that are readily available to perform the request.
      The span ends when the connection is obtained - it could happen if an existing connection became available or
      a new connection was established, so the time wait-for-connection span tracks is different than `dotnet.http.connection_setup`.

      The time it takes to get a connection from the pool is also reported by the
      [`http.client.request.time_in_queue` metric](/docs/dotnet/dotnet-http-metrics.md#metric-httpclientrequesttime_in_queue).

      `Activity.OperationName`: `System.Net.Http.WaitForConnection`
      `ActivitySource` name: `"System.Net.Http` # TODO - should it be different from HTTP requests so that users can opt-in independently?
      Added in: .NET Core 9
    attributes:
      - ref: http.request.method
      - ref: network.protocol.version
      - ref: server.address
      - ref: server.port
      - ref: url.scheme
      - ref: error.type
        examples: ["System.OperationCanceledException"]

  - id: dotnet.http.connection_setup
    type: span
    stability: development
    span_kind: client
    brief: >
      The span is emitted by .NET runtime and describes the establishment of the HTTP connection. It includes
      the time it takes to resolve the DNS, establish the socket connection, and perform the TLS handshake.

      It's different from `dotnet.http.connection` span, which describes the lifetime of the HTTP connection.
    note: |
      `Activity.OperationName`: `System.Net.Http.Connections.ConnectionSetup`
      `ActivitySource` name: `System.Net.Http.Connections` TODO - should be different than connection?
      Added in: .NET Core 9
    attributes:
      - ref: network.protocol.version
      - ref: network.peer.address
      - ref: server.address
      - ref: server.port
      - ref: error.type
      - ref: url.scheme

  - id: dotnet.socket.connection_setup
    type: span
    stability: development
    span_kind: client
    brief: >
      The span is emitted by .NET runtime and describes the establishment of the socket connection.
    note: |
      `Activity.OperationName`: `System.Net.Sockets.ConnectionSetup`
      `ActivitySource` name: `System.Net.Sockets`
      Added in: .NET Core 9
    attributes:
      - ref: network.protocol.version
      - ref: network.peer.address
      - ref: network.transport
      - ref: network.type
      - ref: error.type

  - id: dotnet.dns.lookup
    type: span
    stability: development
    span_kind: client
    brief: >
      The span is emitted by .NET runtime and describes DNS lookup.
    note: |
      DNS lookup duration is also reported by
      [`dns.lookup.duration` metric](/docs/dotnet/dotnet-dns-metrics.md#metric-dnslookupduration).

      `Activity.OperationName`: `System.Net.NameResolution.DnsLookup`
      `ActivitySource` name: `System.Net.NameResolution`
      Added in: .NET Core 9
    attributes:
      - ref: dns.question.name
      - ref: dns.answer
      - ref: error.type

  - id: dotnet.tls.handshake
    type: span
    span_kind: client
    stability: development
    brief: >
      The span is emitted by .NET runtime and describes TLS handshake.
    note: |
      `Activity.OperationName`: `System.Net.Security.TlsHandshake`
      `ActivitySource` name: `System.Net.Security`
      Added in: .NET Core 9
    attributes:
      - ref: tls.protocol.name
      - ref: tls.protocol.version
      - ref: tls.client.server_name
      - ref: error.type
