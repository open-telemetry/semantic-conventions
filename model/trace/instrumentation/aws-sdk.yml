groups:
  - id: aws
    prefix: aws
    type: span
    brief: >
      The `aws` conventions apply to operations using the AWS SDK. They map request or response parameters
      in AWS SDK API calls to attributes on a Span. The conventions have been collected over time based
      on feedback from AWS users of tracing and will continue to evolve as new interesting conventions
      are found.

      Some descriptions are also provided for populating general OpenTelemetry semantic conventions based on
      these APIs.
    attributes:
      - ref: rpc.system
        brief: "The value `aws-api`."
        requirement_level: required
        examples:
          - aws-api
      - ref: rpc.service
        brief: "The name of the service to which a request is made, as returned by the AWS SDK."
        examples:
          - DynamoDB
          - S3
      - ref: rpc.method
        brief: "The name of the operation corresponding to the request, as returned by the AWS SDK"
        examples:
          - GetItem
          - PutItem
      - id: request_id
        type: string
        stability: experimental
        brief: "The AWS request ID as returned in the response headers `x-amz-request-id` or `x-amz-requestid`."
        examples:
          - 79b9da39-b7ae-508a-a6bc-864b2829c622
          - C9ER4AJX75574TDJ

  - id: dynamodb.all
    type: span
    brief: "Attributes always filled for all DynamoDB request types."
    attributes:
      - ref: db.system
        brief: "The value `dynamodb`."
        requirement_level: required
        examples:
          - dynamodb

  - id: dynamodb.shared
    extends: aws
    type: span
    brief: "Attributes that exist for multiple DynamoDB request types."
    attributes:
      - ref: db.operation
        brief: "The same value as `rpc.method`."
        examples:
          - GetItem
          - PutItem
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.item_collection_metrics
        requirement_level: recommended
      - ref: aws.dynamodb.provisioned_read_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.provisioned_write_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.consistent_read
        requirement_level: recommended
      - ref: aws.dynamodb.projection
        requirement_level: recommended
      - ref: aws.dynamodb.limit
        requirement_level: recommended
      - ref: aws.dynamodb.attributes_to_get
        requirement_level: recommended
      - ref: aws.dynamodb.index_name
        requirement_level: recommended
      - ref: aws.dynamodb.select
        requirement_level: recommended

  - id: dynamodb.batchgetitem
    brief: DynamoDB.BatchGetItem
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended

  - id: dynamodb.batchwriteitem
    brief: DynamoDB.BatchWriteItem
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.item_collection_metrics
        requirement_level: recommended

  - id: dynamodb.createtable
    brief: DynamoDB.CreateTable
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.global_secondary_indexes
        requirement_level: recommended
      - ref: aws.dynamodb.local_secondary_indexes
        requirement_level: recommended
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.item_collection_metrics
        requirement_level: recommended
      - ref: aws.dynamodb.provisioned_read_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.provisioned_write_capacity
        requirement_level: recommended

  - id: dynamodb.deleteitem
    brief: DynamoDB.DeleteItem
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.item_collection_metrics
        requirement_level: recommended

  - id: dynamodb.deletetable
    brief: DynamoDB.DeleteTable
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users

  - id: dynamodb.describetable
    brief: DynamoDB.DescribeTable
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users

  - id: dynamodb.getitem
    brief: DynamoDB.GetItem
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.consistent_read
        requirement_level: recommended
      - ref: aws.dynamodb.projection
        requirement_level: recommended

  - id: dynamodb.listtables
    brief: DynamoDB.ListTables
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.exclusive_start_table
        requirement_level: recommended
      - ref: aws.dynamodb.table_count
        requirement_level: recommended
      - ref: aws.dynamodb.limit
        requirement_level: recommended

  - id: dynamodb.putitem
    brief: DynamoDB.PutItem
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.item_collection_metrics
        requirement_level: recommended

  - id: dynamodb.query
    brief: DynamoDB.Query
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.scan_forward
        requirement_level: recommended
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.consistent_read
        requirement_level: recommended
      - ref: aws.dynamodb.limit
        requirement_level: recommended
      - ref: aws.dynamodb.projection
        requirement_level: recommended
      - ref: aws.dynamodb.attributes_to_get
        requirement_level: recommended
      - ref: aws.dynamodb.index_name
        requirement_level: recommended
      - ref: aws.dynamodb.select
        requirement_level: recommended

  - id: dynamodb.scan
    brief: DynamoDB.Scan
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.segment
        requirement_level: recommended
      - ref: aws.dynamodb.total_segments
        requirement_level: recommended
      - ref: aws.dynamodb.count
        requirement_level: recommended
      - ref: aws.dynamodb.scanned_count
        requirement_level: recommended
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.consistent_read
        requirement_level: recommended
      - ref: aws.dynamodb.limit
        requirement_level: recommended
      - ref: aws.dynamodb.projection
        requirement_level: recommended
      - ref: aws.dynamodb.attributes_to_get
        requirement_level: recommended
      - ref: aws.dynamodb.index_name
        requirement_level: recommended
      - ref: aws.dynamodb.select
        requirement_level: recommended

  - id: dynamodb.updateitem
    brief: DynamoDB.UpdateItem
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.item_collection_metrics
        requirement_level: recommended

  - id: dynamodb.updatetable
    brief: DynamoDB.UpdateTable
    extends: aws
    type: span
    attributes:
      - ref: aws.dynamodb.attribute_definitions
        requirement_level: recommended
      - ref: aws.dynamodb.global_secondary_index_updates
        requirement_level: recommended
      - ref: aws.dynamodb.table_names
        requirement_level: recommended
        brief: "A single-element array with the value of the TableName request parameter."
        examples:
          - Users
      - ref: aws.dynamodb.consumed_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.provisioned_read_capacity
        requirement_level: recommended
      - ref: aws.dynamodb.provisioned_write_capacity
        requirement_level: recommended

  - id: aws.s3
    extends: aws
    prefix: aws.s3
    type: span
    brief: "Attributes that exist for S3 request types."
    attributes:
      - id: bucket
        type: string
        stability: experimental
        brief: "The S3 bucket name the request refers to. Corresponds to the `--bucket` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations."
        examples:
          - some-bucket-name
        note: |
            The `bucket` attribute is applicable to all S3 operations that reference a bucket, i.e. that require the bucket name as a mandatory parameter.
            This applies to almost all S3 operations except `list-buckets`.
      - id: key
        type: string
        stability: experimental
        brief: "The S3 object key the request refers to. Corresponds to the `--key` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations."
        examples:
          - someFile.yml
        note: |
            The `key` attribute is applicable to all object-related S3 operations, i.e. that require the object key as a mandatory parameter.
            This applies in particular to the following operations:

            - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)
            - [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html)
            - [get-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/get-object.html)
            - [head-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/head-object.html)
            - [put-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/put-object.html)
            - [restore-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/restore-object.html)
            - [select-object-content](https://docs.aws.amazon.com/cli/latest/reference/s3api/select-object-content.html)
            - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)
            - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)
            - [create-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/create-multipart-upload.html)
            - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)
            - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)
            - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)
      - id: copy_source
        type: string
        stability: experimental
        brief: "The source object (in the form `bucket`/`key`) for the copy operation."
        examples:
          - someFile.yml
        note: |
            The `copy_source` attribute applies to S3 copy operations and corresponds to the `--copy-source` parameter
            of the [copy-object operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html).
            This applies in particular to the following operations:

            - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)
            - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)
      - id: upload_id
        type: string
        stability: experimental
        brief: "Upload ID that identifies the multipart upload."
        examples:
          - 'dfRtDYWFbkRONycy.Yxwh66Yjlx.cph0gtNBtJ'
        note: |
            The `upload_id` attribute applies to S3 multipart-upload operations and corresponds to the `--upload-id` parameter
            of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) multipart operations.
            This applies in particular to the following operations:

            - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)
            - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)
            - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)
            - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)
            - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)
      - id: delete
        type: string
        stability: experimental
        brief: "The delete request container that specifies the objects to be deleted."
        examples:
          - 'Objects=[{Key=string,VersionId=string},{Key=string,VersionId=string}],Quiet=boolean'
        note: |
            The `delete` attribute is only applicable to the [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html) operation.
            The `delete` attribute corresponds to the `--delete` parameter of the
            [delete-objects operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-objects.html).
      - id: part_number
        type: int
        stability: experimental
        brief: "The part number of the part being uploaded in a multipart-upload operation. This is a positive integer between 1 and 10,000."
        examples:
          - 3456
        note: |
            The `part_number` attribute is only applicable to the [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)
            and [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html) operations.
            The `part_number` attribute corresponds to the `--part-number` parameter of the
            [upload-part operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html).
