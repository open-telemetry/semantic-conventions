groups:
  - id: trace.http.common
    extends: attributes.http.common
    type: attribute_group
    brief: 'This document defines semantic conventions for HTTP client and server Spans.'
    note: >
        These conventions can be used for http and https schemes
        and various HTTP versions like 1.1, 2 and SPDY.
    attributes:
      - ref: http.request.method_original
        requirement_level:
          conditionally_required: If and only if it's different than `http.request.method`.
      - ref: http.request.body.size
      - ref: http.request.header
        requirement_level: opt_in
      - ref: http.response.body.size
      - ref: http.response.header
        requirement_level: opt_in
      - ref: http.request.method
        sampling_relevant: true
        requirement_level: required
      - ref: network.transport
        requirement_level:
          conditionally_required: If not default (`tcp` for `HTTP/1.1` and `HTTP/2`, `udp` for `HTTP/3`).
      - ref: network.type
      - ref: user_agent.original

  - id: trace.http.client
    type: span
    extends: attributes.http.client
    span_kind: client
    brief: 'Semantic Convention for HTTP Client'
    attributes:
      - ref: http.resend_count
        requirement_level:
          recommended: if and only if request was retried.
      - ref: server.address
        sampling_relevant: true
      - ref: server.port
        sampling_relevant: true
      - ref: network.peer.address
        requirement_level:
          recommended: If different than `server.address`.
      - ref: network.peer.port
        requirement_level:
          recommended: If `network.peer.address` is set.
      - ref: url.full
        sampling_relevant: true
        requirement_level: required

  - id: trace.http.server
    type: span
    extends: attributes.http.server
    span_kind: server
    brief: 'Semantic Convention for HTTP Server'
    attributes:
      - ref: http.route
      - ref: server.address
        sampling_relevant: true
      - ref: server.port
        sampling_relevant: true
      - ref: network.local.address
        requirement_level: opt_in
        brief: Local socket address. Useful in case of a multi-IP host.
      - ref: network.local.port
        requirement_level: opt_in
        brief: Local socket port. Useful in case of a multi-port host.
      - ref: client.address
        note: >
            The IP address of the original client behind all proxies, if
            known (e.g. from [Forwarded](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Forwarded),
            [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For), or a similar header).
            Otherwise, the immediate client peer address.
        examples: ['83.164.160.102']
      - ref: client.port
        brief: >
            The port of the original client behind all proxies, if
            known (e.g. from [Forwarded](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Forwarded) or a similar header).
            Otherwise, the immediate client peer port.
      - ref: network.peer.address
      - ref: network.peer.port
      - ref: url.path
        requirement_level: required
        sampling_relevant: true
      - ref: url.query
        requirement_level:
          conditionally_required: If and only if one was received/sent.
        sampling_relevant: true
      - ref: url.scheme
        sampling_relevant: true
