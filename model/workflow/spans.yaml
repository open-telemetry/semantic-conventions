groups:
  - id: span.workflow.execution.client
    type: span
    span_kind: client
    stability: development
    extends: attribute.span.workflow.coordination
    brief: >
      Used to capture the execution of tasks is delegated to workers. The completion of the task is described in `span.workflow.execution.server`.
    attributes:
      - ref: workflow.definition.name
        requirement_level: recommended
      - ref: workflow.definition.url.full
        requirement_level: opt_in
      - ref: workflow.url.full
        requirement_level: opt_in

  - id: span.workflow.execution.server
    type: span
    span_kind: server
    stability: development
    extends: attribute.span.workflow.execution
    brief: >
      Used to capture the execution of tasks from the perspective of the worker. The triggering of the task is described in `span.workflow.execution.client`.

  - id: span.workflow.execution.internal
    type: span
    span_kind: internal
    stability: development
    extends: attribute.span.workflow.execution
    brief: >
      Used to capture when there is no designated workers and the tasks are performed directly when determined as needing to be run.

  - id: span.workflow.trigger.internal
    type: span
    span_kind: internal
    stability: development
    extends: attribute.span.workflow.core
    brief: >
      Used to capture the process of handling an internal trigger to initiate a workflow such as a cron schedule.
    note: >
      For scenarios where the trigger is a message received, api request etc the corresponding server span should be used with the corresponding attributes added for workflow trigger.

      Also this span pairs with the workflow trigger event.
    attributes:
      - ref: workflow.trigger.id
        requirement_level: required
      - ref: workflow.trigger.name
        requirement_level: recommended
      - ref: workflow.trigger.type
        requirement_level: required
