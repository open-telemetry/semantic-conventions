groups:
  - id: registry.mcp
    type: attribute_group
    brief: >
      [Model Context Protocol (MCP)](https://spec.modelcontextprotocol.io) attributes
    attributes:
      - id: mcp.method.name
        brief: The name of the request or notification method.
        stability: development
        type:
          members:
            - id: notifications_cancelled
              value: notifications/cancelled
              brief: >
                Notification cancelling a previously-issued request.
              stability: development
            - id: initialize
              value: initialize
              brief: >
                Request to initialize the MCP client.
              stability: development
            - id: notifications_initialized
              value: notifications/initialized
              brief: >
                Notification indicating that the MCP client has been initialized.
              stability: development
            - id: notifications_progress
              value: notifications/progress
              brief: >
                Notification indicating the progress for a long-running operation.
              stability: development
            - id: ping
              value: ping
              brief: >
                Request to check that the other party is still alive.
              stability: development
            - id: resources_list
              value: resources/list
              brief: >
                Request to list resources available on server.
              stability: development
            - id: resources_templates_list
              value: resources/templates/list
              brief: >
                Request to list resource templates available on server.
              stability: development
            - id: resources_read
              value: resources/read
              brief: >
                Request to read a resource.
              stability: development
            - id: notifications_resources_list_changed
              value: notifications/resources/list_changed
              brief: >
                Notification indicating that the list of resources has changed.
              stability: development
            - id: resources_subscribe
              value: resources/subscribe
              brief: >
                Request to subscribe to a resource.
              stability: development
            - id: resources_unsubscribe
              value: resources/unsubscribe
              brief: >
                Request to unsubscribe from a resource updates.
              stability: development
            - id: notifications_resources_updated
              value: notifications/resources/updated
              brief: >
                Notification indicating that a resource has been updated.
              stability: development
            - id: prompts_list
              value: prompts/list
              brief: >
                Request to list prompts available on server.
              stability: development
            - id: prompts_get
              value: prompts/get
              brief: >
                Request to get a prompt.
              stability: development
            - id: notifications_prompts_list_changed
              value: notifications/prompts/list_changed
              brief: >
                Notification indicating that the list of prompts has changed.
              stability: development
            - id: tools_list
              value: tools/list
              brief: >
                Request to list tools available on server.
              stability: development
            - id: tools_call
              value: tools/call
              brief: >
                Request to call a tool.
              stability: development
            - id: notifications_tools_list_changed
              value: notifications/tools/list_changed
              brief: >
                Notification indicating that the list of tools has changed.
              stability: development
            - id: logging_set_level
              value: logging/setLevel
              brief: >
                Request to set the logging level.
              stability: development
            - id: notifications_message
              value: notifications/message
              brief: >
                Notification indicating that a message has been received.
              stability: development
            - id: sampling_create_message
              value: sampling/createMessage
              brief: >
                Request to create a sampling message.
              stability: development
            - id: completion_complete
              value: completion/complete
              brief: >
                Request to complete a prompt.
              stability: development
            - id: roots_list
              value: roots/list
              brief: >
                Request to list roots available on server.
              stability: development
            - id: notifications_roots_list_changed
              value: notifications/roots/list_changed
              brief: >
                Notification indicating that the list of roots has changed.
              stability: development
            - id: elicitation_create
              value: elicitation/create
              brief: >
                Request from the server to elicit additional information from the
                user via the client
              stability: development
      - id: mcp.request.id
        type: string
        brief: >
          This is a unique identifier for the request.
        stability: development
        examples: ["42"]
      - id: mcp.session.id
        type: string
        brief: Identifies MCP session.
        stability: development
        examples: ["191c4850af6c49e08843a3f6c80e5046"]
      - id: mcp.tool.name
        # This is effectively the same as `gen_ai.tool.name`, but it's not clear
        # which one of them should survive. MCP can be used outside of GenAI domain,
        # and GenAI can be used without MCP.
        type: string
        brief: The name of the tool provided in the request.
        stability: development
        examples: ["get-weather", "execute_command"]
      - id: mcp.prompt.name
        type: string
        brief: The name of the prompt or prompt template provided in the request or response.
        stability: development
        examples: ["analyze-code"]
      - id: mcp.resource.uri
        type: string
        brief: The value of the resource uri.
        note: >
          This is a URI of the resource provided in the following requests or notifications:
          `resources/read`, `resources/subscribe`, `resources/unsubscribe`, or `notifications/resources/updated`.
        stability: development
        examples: ["postgres://database/customers/schema", "file:///home/user/documents/report.pdf"]
      - id: mcp.request.argument
        type: template[any]
        brief: Additional arguments passed to the request within `params` object.
          `<key>` being the normalized argument name (lowercase), the value being the argument value.
        note: |
          Instrumentations SHOULD require an explicit configuration of which arguments
          are to be captured. Including all request arguments can be a security risk -
          explicit configuration helps avoid leaking sensitive information.

          Value type SHOULD match the value of the argument as passed in the request.

          Examples:

          - A `param.location` argument with value `"Seattle, WA"` SHOULD be recorded as the
            `mcp.request.argument.location` attribute with value `"Seattle, WA"`.
          - A `param.a` argument with value `42` SHOULD be recorded as the `mcp.request.argument.a` attribute with value `42`.
          - A `param.complex` argument with value `{"foo": "bar"}` SHOULD be recorded as the
            `mcp.request.argument.complex` attribute with complex value type `{"foo": "bar"}`.

          When the attribute value SHOULD be recorded in structured form when it's possible
          and MAY be recorded as a JSON string if structured format is not yet supported
          by the OpenTelemetry implementation.
        stability: development
        examples: ["Seattle, WA", '42', '{"foo": "bar"}']
