groups:
  - id: span.rpc.client
    type: span
    stability: development
    brief: This span represents an outgoing Remote Procedure Call (RPC).
    note: |
      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `CLIENT`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. Semantic conventions for
      individual systems SHOULD specify which values of `rpc.status_code`
      classify as errors.
    extends: rpc_service
    span_kind: client
    events: [rpc.message]
    attributes:
      - ref: rpc.system
        requirement_level: required

  - id: span.rpc.server
    type: span
    stability: development
    extends: rpc_service.server
    span_kind: server
    brief: This span represents an incoming Remote Procedure Call (RPC).
    events: [rpc.message]
    note: |
      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `SERVER`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. Semantic conventions for
      individual systems SHOULD specify which values of `rpc.status_code`
      classify as errors.
    attributes:
      - ref: rpc.system
        requirement_level: required

  - id: span.rpc.connect_rpc.client
    type: span
    stability: development
    brief: This span represents an outgoing Remote Procedure Call (RPC).
    note: |
      `rpc.system` MUST be set to `"connect_rpc"` and SHOULD be provided **at span creation time.**

      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `CLIENT`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. When error response is returned and
      it contains [`message`](https://connectrpc.com/docs/web/errors/#error-messages),
      the raw error message SHOULD be recorded as the span status description.
    extends: rpc_service
    span_kind: client
    attributes:
      - ref: rpc.status_code
        requirement_level:
          conditionally_required: if available.
        brief: The [error code](https://connectrpc.com//docs/protocol/#error-codes) of the Connect response.
        note: |
          All error codes except `OK` SHOULD be considered errors.
      - ref: rpc.connect_rpc.request.metadata
        requirement_level: opt_in
      - ref: rpc.connect_rpc.response.metadata
        requirement_level: opt_in

  - id: span.rpc.connect_rpc.server
    type: span
    stability: development
    extends: rpc_service.server
    span_kind: server
    brief: This span represents an incoming Remote Procedure Call (RPC).
    note: |
      `rpc.system` MUST be set to `"connect_rpc"` and SHOULD be provided **at span creation time.**

      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `SERVER`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. When error response is returned and
      it contains [`message`](https://connectrpc.com/docs/web/errors/#error-messages),
      the raw error message SHOULD be recorded as the span status description.
    attributes:
      - ref: rpc.status_code
        requirement_level:
          conditionally_required: if available.
        brief: The [error code](https://connectrpc.com//docs/protocol/#error-codes) of the Connect response.
        note: |
          The following error codes SHOULD be considered errors:

          - `unknown`
          - `deadline_exceeded`
          - `unimplemented`
          - `internal`
          - `unavailable`
          - `data_loss`
      - ref: rpc.connect_rpc.request.metadata
        requirement_level: opt_in
      - ref: rpc.connect_rpc.response.metadata
        requirement_level: opt_in

  - id: span.rpc.grpc.client
    type: span
    stability: development
    brief: This span represents an outgoing Remote Procedure Call (RPC).
    note: |
      `rpc.system` MUST be set to `"grpc"` and SHOULD be provided **at span creation time.**

      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `CLIENT`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. See also `rpc.status_code` attribute
      for the details on which values classify as errors.
    extends: rpc_service
    span_kind: client
    attributes:
      - ref: rpc.method
        requirement_level: required
      - ref: rpc.service
        requirement_level: required
      - ref: rpc.status_code
        requirement_level: required
        brief: >
          The string representation of the [status code](https://github.com/grpc/grpc/blob/v1.75.0/doc/statuscodes.md)
          returned by the server or generated by the client.
        note: |
          All status codes except `OK` SHOULD be considered errors.
      - ref: rpc.grpc.request.metadata
        requirement_level: opt_in
      - ref: rpc.grpc.response.metadata
        requirement_level: opt_in

  - id: span.rpc.grpc.server
    type: span
    stability: development
    extends: rpc_service.server
    span_kind: server
    brief: This span represents an incoming Remote Procedure Call (RPC).
    note: |
      `rpc.system` MUST be set to `"grpc"` and SHOULD be provided **at span creation time.**

      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `SERVER`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. See also `rpc.status_code` attribute
      for the details on which values classify as errors.
    attributes:
      - ref: rpc.status_code
        requirement_level: required
        brief: >
          The string representation of the [status code](https://github.com/grpc/grpc/blob/v1.75.0/doc/statuscodes.md)
          returned by the server.
        note: |
          The following status codes SHOULD be considered errors:

          - `UNKNOWN`
          - `DEADLINE_EXCEEDED`
          - `UNIMPLEMENTED`
          - `INTERNAL`
          - `UNAVAILABLE`
          - `DATA_LOSS`

      - ref: rpc.grpc.request.metadata
        requirement_level: opt_in
      - ref: rpc.grpc.response.metadata
        requirement_level: opt_in

  - id: span.rpc.jsonrpc.client
    type: span
    stability: development
    brief: This span represents an outgoing Remote Procedure Call (RPC).
    note: |
      `rpc.system` MUST be set to `"jsonrpc"` and SHOULD be provided **at span creation time.**

      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `CLIENT`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. Responses that include
      [`error` object](https://www.jsonrpc.org/specification#error_object)
      are considered errors. When error object is returned  with
      [`message`](https://www.jsonrpc.org/specification#error_object) property,
      the error message SHOULD be recorded as the span status description.
    extends: rpc
    span_kind: client
    attributes:
      - ref: rpc.method
        requirement_level: required
      - ref: rpc.jsonrpc.version
        requirement_level:
          conditionally_required: If other than the default version (`1.0`)
      - ref: rpc.jsonrpc.request_id
        requirement_level: recommended
      - ref: rpc.status_code
        brief: >
          The [`error.code`](https://www.jsonrpc.org/specification#error_object)
          property of response if it is an error response recorded as a string.
        note:
          All JSON RPC error codes SHOULD be considered errors.
        requirement_level:
          conditionally_required: when available

  - id: span.rpc.jsonrpc.server
    type: span
    stability: development
    extends: rpc.server
    span_kind: server
    brief: This span represents an incoming Remote Procedure Call (RPC).
    note: |
      `rpc.system` MUST be set to `"jsonrpc"` and SHOULD be provided **at span creation time.**

      **Span name:** refer to the [Span Name](/docs/rpc/rpc-spans.md#span-name) section.

      **Span kind** MUST be `SERVER`.

      **Span status** Refer to the [Recording Errors](/docs/general/recording-errors.md)
      document for details on how to record span status. Responses that include
      [`error` object](https://www.jsonrpc.org/specification#error_object)
      are considered errors. When error object is returned  with
      [`message`](https://www.jsonrpc.org/specification#error_object) property,
      the error message SHOULD be recorded as the span status description.
    attributes:
      - ref: rpc.method
        requirement_level: required
      - ref: rpc.jsonrpc.version
        requirement_level:
          conditionally_required: If other than the default version (`1.0`)
      - ref: rpc.jsonrpc.request_id
        requirement_level: recommended
      - ref: rpc.status_code
        brief: >
          The [`error.code`](https://www.jsonrpc.org/specification#error_object) property of
          response recorded as a string.
        note:
          All JSON RPC error codes SHOULD be considered errors.
        requirement_level:
          conditionally_required: when available

  - id: event.rpc.message
    type: event
    stability: development
    name: rpc.message
    brief: Describes a message sent or received within the context of an RPC call.
    note: >
      In the lifetime of an RPC stream, an event for each message sent/received on
      client and server spans SHOULD be created. In case of unary calls only one sent
      and one received message will be recorded for both client and server spans.
    attributes:
      - ref: rpc.message.type
        requirement_level: recommended
      - ref: rpc.message.id
        requirement_level: recommended
      - ref: rpc.message.compressed_size
        requirement_level: recommended
      - ref: rpc.message.uncompressed_size
        requirement_level: recommended
